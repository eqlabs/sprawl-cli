// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/sprawl.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type State int32

const (
	State_OPEN   State = 0
	State_LOCKED State = 1
)

var State_name = map[int32]string{
	0: "OPEN",
	1: "LOCKED",
}

var State_value = map[string]int32{
	"OPEN":   0,
	"LOCKED": 1,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{0}
}

type Operation int32

const (
	Operation_CREATE Operation = 0
	Operation_DELETE Operation = 1
	Operation_LOCK   Operation = 2
	Operation_UNLOCK Operation = 3
)

var Operation_name = map[int32]string{
	0: "CREATE",
	1: "DELETE",
	2: "LOCK",
	3: "UNLOCK",
}

var Operation_value = map[string]int32{
	"CREATE": 0,
	"DELETE": 1,
	"LOCK":   2,
	"UNLOCK": 3,
}

func (x Operation) String() string {
	return proto.EnumName(Operation_name, int32(x))
}

func (Operation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{1}
}

type Order struct {
	Id                   []byte               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Asset                string               `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	CounterAsset         string               `protobuf:"bytes,4,opt,name=counterAsset,proto3" json:"counterAsset,omitempty"`
	Amount               uint64               `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Price                float32              `protobuf:"fixed32,6,opt,name=price,proto3" json:"price,omitempty"`
	State                State                `protobuf:"varint,7,opt,name=state,proto3,enum=pb.State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{0}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Order) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Order) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *Order) GetCounterAsset() string {
	if m != nil {
		return m.CounterAsset
	}
	return ""
}

func (m *Order) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Order) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Order) GetState() State {
	if m != nil {
		return m.State
	}
	return State_OPEN
}

type Channel struct {
	Id                   []byte          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Options              *ChannelOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Channel) Reset()         { *m = Channel{} }
func (m *Channel) String() string { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()    {}
func (*Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{1}
}

func (m *Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Channel.Unmarshal(m, b)
}
func (m *Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Channel.Marshal(b, m, deterministic)
}
func (m *Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Channel.Merge(m, src)
}
func (m *Channel) XXX_Size() int {
	return xxx_messageInfo_Channel.Size(m)
}
func (m *Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_Channel proto.InternalMessageInfo

func (m *Channel) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Channel) GetOptions() *ChannelOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type WireMessage struct {
	ChannelID            []byte    `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Operation            Operation `protobuf:"varint,2,opt,name=operation,proto3,enum=pb.Operation" json:"operation,omitempty"`
	Data                 []byte    `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *WireMessage) Reset()         { *m = WireMessage{} }
func (m *WireMessage) String() string { return proto.CompactTextString(m) }
func (*WireMessage) ProtoMessage()    {}
func (*WireMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{2}
}

func (m *WireMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WireMessage.Unmarshal(m, b)
}
func (m *WireMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WireMessage.Marshal(b, m, deterministic)
}
func (m *WireMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WireMessage.Merge(m, src)
}
func (m *WireMessage) XXX_Size() int {
	return xxx_messageInfo_WireMessage.Size(m)
}
func (m *WireMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_WireMessage.DiscardUnknown(m)
}

var xxx_messageInfo_WireMessage proto.InternalMessageInfo

func (m *WireMessage) GetChannelID() []byte {
	if m != nil {
		return m.ChannelID
	}
	return nil
}

func (m *WireMessage) GetOperation() Operation {
	if m != nil {
		return m.Operation
	}
	return Operation_CREATE
}

func (m *WireMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateRequest struct {
	ChannelID            []byte   `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Asset                string   `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	CounterAsset         string   `protobuf:"bytes,3,opt,name=counterAsset,proto3" json:"counterAsset,omitempty"`
	Amount               uint64   `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Price                float32  `protobuf:"fixed32,5,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{3}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetChannelID() []byte {
	if m != nil {
		return m.ChannelID
	}
	return nil
}

func (m *CreateRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *CreateRequest) GetCounterAsset() string {
	if m != nil {
		return m.CounterAsset
	}
	return ""
}

func (m *CreateRequest) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CreateRequest) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

type JoinRequest struct {
	Asset                string   `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	CounterAsset         string   `protobuf:"bytes,2,opt,name=counterAsset,proto3" json:"counterAsset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRequest) Reset()         { *m = JoinRequest{} }
func (m *JoinRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()    {}
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{4}
}

func (m *JoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRequest.Unmarshal(m, b)
}
func (m *JoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRequest.Marshal(b, m, deterministic)
}
func (m *JoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRequest.Merge(m, src)
}
func (m *JoinRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRequest.Size(m)
}
func (m *JoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRequest proto.InternalMessageInfo

func (m *JoinRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *JoinRequest) GetCounterAsset() string {
	if m != nil {
		return m.CounterAsset
	}
	return ""
}

type ChannelOptions struct {
	AssetPair            string   `protobuf:"bytes,1,opt,name=assetPair,proto3" json:"assetPair,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelOptions) Reset()         { *m = ChannelOptions{} }
func (m *ChannelOptions) String() string { return proto.CompactTextString(m) }
func (*ChannelOptions) ProtoMessage()    {}
func (*ChannelOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{5}
}

func (m *ChannelOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelOptions.Unmarshal(m, b)
}
func (m *ChannelOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelOptions.Marshal(b, m, deterministic)
}
func (m *ChannelOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelOptions.Merge(m, src)
}
func (m *ChannelOptions) XXX_Size() int {
	return xxx_messageInfo_ChannelOptions.Size(m)
}
func (m *ChannelOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelOptions proto.InternalMessageInfo

func (m *ChannelOptions) GetAssetPair() string {
	if m != nil {
		return m.AssetPair
	}
	return ""
}

type OrderSpecificRequest struct {
	OrderID              []byte   `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	ChannelID            []byte   `protobuf:"bytes,2,opt,name=channelID,proto3" json:"channelID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderSpecificRequest) Reset()         { *m = OrderSpecificRequest{} }
func (m *OrderSpecificRequest) String() string { return proto.CompactTextString(m) }
func (*OrderSpecificRequest) ProtoMessage()    {}
func (*OrderSpecificRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{6}
}

func (m *OrderSpecificRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderSpecificRequest.Unmarshal(m, b)
}
func (m *OrderSpecificRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderSpecificRequest.Marshal(b, m, deterministic)
}
func (m *OrderSpecificRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderSpecificRequest.Merge(m, src)
}
func (m *OrderSpecificRequest) XXX_Size() int {
	return xxx_messageInfo_OrderSpecificRequest.Size(m)
}
func (m *OrderSpecificRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderSpecificRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderSpecificRequest proto.InternalMessageInfo

func (m *OrderSpecificRequest) GetOrderID() []byte {
	if m != nil {
		return m.OrderID
	}
	return nil
}

func (m *OrderSpecificRequest) GetChannelID() []byte {
	if m != nil {
		return m.ChannelID
	}
	return nil
}

type ChannelSpecificRequest struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelSpecificRequest) Reset()         { *m = ChannelSpecificRequest{} }
func (m *ChannelSpecificRequest) String() string { return proto.CompactTextString(m) }
func (*ChannelSpecificRequest) ProtoMessage()    {}
func (*ChannelSpecificRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{7}
}

func (m *ChannelSpecificRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelSpecificRequest.Unmarshal(m, b)
}
func (m *ChannelSpecificRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelSpecificRequest.Marshal(b, m, deterministic)
}
func (m *ChannelSpecificRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelSpecificRequest.Merge(m, src)
}
func (m *ChannelSpecificRequest) XXX_Size() int {
	return xxx_messageInfo_ChannelSpecificRequest.Size(m)
}
func (m *ChannelSpecificRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelSpecificRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelSpecificRequest proto.InternalMessageInfo

func (m *ChannelSpecificRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type CreateResponse struct {
	CreatedOrder         *Order   `protobuf:"bytes,1,opt,name=createdOrder,proto3" json:"createdOrder,omitempty"`
	Error                *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{8}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetCreatedOrder() *Order {
	if m != nil {
		return m.CreatedOrder
	}
	return nil
}

func (m *CreateResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type OrderListResponse struct {
	Orders               []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderListResponse) Reset()         { *m = OrderListResponse{} }
func (m *OrderListResponse) String() string { return proto.CompactTextString(m) }
func (*OrderListResponse) ProtoMessage()    {}
func (*OrderListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{9}
}

func (m *OrderListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderListResponse.Unmarshal(m, b)
}
func (m *OrderListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderListResponse.Marshal(b, m, deterministic)
}
func (m *OrderListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderListResponse.Merge(m, src)
}
func (m *OrderListResponse) XXX_Size() int {
	return xxx_messageInfo_OrderListResponse.Size(m)
}
func (m *OrderListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderListResponse proto.InternalMessageInfo

func (m *OrderListResponse) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type ChannelListResponse struct {
	Channels             []*Channel `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ChannelListResponse) Reset()         { *m = ChannelListResponse{} }
func (m *ChannelListResponse) String() string { return proto.CompactTextString(m) }
func (*ChannelListResponse) ProtoMessage()    {}
func (*ChannelListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{10}
}

func (m *ChannelListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelListResponse.Unmarshal(m, b)
}
func (m *ChannelListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelListResponse.Marshal(b, m, deterministic)
}
func (m *ChannelListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelListResponse.Merge(m, src)
}
func (m *ChannelListResponse) XXX_Size() int {
	return xxx_messageInfo_ChannelListResponse.Size(m)
}
func (m *ChannelListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelListResponse proto.InternalMessageInfo

func (m *ChannelListResponse) GetChannels() []*Channel {
	if m != nil {
		return m.Channels
	}
	return nil
}

type JoinResponse struct {
	JoinedChannel        *Channel `protobuf:"bytes,1,opt,name=joinedChannel,proto3" json:"joinedChannel,omitempty"`
	Error                *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinResponse) Reset()         { *m = JoinResponse{} }
func (m *JoinResponse) String() string { return proto.CompactTextString(m) }
func (*JoinResponse) ProtoMessage()    {}
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{11}
}

func (m *JoinResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinResponse.Unmarshal(m, b)
}
func (m *JoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinResponse.Marshal(b, m, deterministic)
}
func (m *JoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinResponse.Merge(m, src)
}
func (m *JoinResponse) XXX_Size() int {
	return xxx_messageInfo_JoinResponse.Size(m)
}
func (m *JoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinResponse proto.InternalMessageInfo

func (m *JoinResponse) GetJoinedChannel() *Channel {
	if m != nil {
		return m.JoinedChannel
	}
	return nil
}

func (m *JoinResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type GenericResponse struct {
	Error                *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenericResponse) Reset()         { *m = GenericResponse{} }
func (m *GenericResponse) String() string { return proto.CompactTextString(m) }
func (*GenericResponse) ProtoMessage()    {}
func (*GenericResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{12}
}

func (m *GenericResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenericResponse.Unmarshal(m, b)
}
func (m *GenericResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenericResponse.Marshal(b, m, deterministic)
}
func (m *GenericResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenericResponse.Merge(m, src)
}
func (m *GenericResponse) XXX_Size() int {
	return xxx_messageInfo_GenericResponse.Size(m)
}
func (m *GenericResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenericResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenericResponse proto.InternalMessageInfo

func (m *GenericResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type Error struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{13}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9abbf861cc1c96d, []int{14}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("pb.State", State_name, State_value)
	proto.RegisterEnum("pb.Operation", Operation_name, Operation_value)
	proto.RegisterType((*Order)(nil), "pb.Order")
	proto.RegisterType((*Channel)(nil), "pb.Channel")
	proto.RegisterType((*WireMessage)(nil), "pb.WireMessage")
	proto.RegisterType((*CreateRequest)(nil), "pb.CreateRequest")
	proto.RegisterType((*JoinRequest)(nil), "pb.JoinRequest")
	proto.RegisterType((*ChannelOptions)(nil), "pb.ChannelOptions")
	proto.RegisterType((*OrderSpecificRequest)(nil), "pb.OrderSpecificRequest")
	proto.RegisterType((*ChannelSpecificRequest)(nil), "pb.ChannelSpecificRequest")
	proto.RegisterType((*CreateResponse)(nil), "pb.CreateResponse")
	proto.RegisterType((*OrderListResponse)(nil), "pb.OrderListResponse")
	proto.RegisterType((*ChannelListResponse)(nil), "pb.ChannelListResponse")
	proto.RegisterType((*JoinResponse)(nil), "pb.JoinResponse")
	proto.RegisterType((*GenericResponse)(nil), "pb.GenericResponse")
	proto.RegisterType((*Error)(nil), "pb.Error")
	proto.RegisterType((*Empty)(nil), "pb.Empty")
}

func init() { proto.RegisterFile("pb/sprawl.proto", fileDescriptor_a9abbf861cc1c96d) }

var fileDescriptor_a9abbf861cc1c96d = []byte{
	// 790 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xdd, 0x72, 0xda, 0x56,
	0x10, 0xae, 0x04, 0x12, 0x66, 0xc1, 0x18, 0x1f, 0xbb, 0xae, 0x86, 0x69, 0xc7, 0x54, 0x37, 0xa5,
	0x6e, 0x0b, 0x2d, 0xb5, 0xeb, 0xf6, 0xa6, 0x33, 0x1e, 0xd0, 0x90, 0x1f, 0x62, 0x3c, 0xb2, 0x3d,
	0xb9, 0x8d, 0x90, 0xd6, 0x8e, 0x12, 0x21, 0x29, 0xd2, 0x71, 0x32, 0x79, 0x90, 0x3c, 0x55, 0xee,
	0xf3, 0x00, 0x79, 0x92, 0xcc, 0xf9, 0x91, 0x90, 0x70, 0x8c, 0x93, 0xdc, 0x71, 0xbe, 0xdd, 0x6f,
	0xf7, 0xec, 0xb7, 0xdf, 0x11, 0xb0, 0x15, 0xcf, 0x07, 0x69, 0x9c, 0x38, 0x6f, 0x82, 0x7e, 0x9c,
	0x44, 0x34, 0x22, 0x6a, 0x3c, 0xef, 0xec, 0x5f, 0x47, 0xd1, 0x75, 0x80, 0x03, 0x8e, 0xcc, 0x6f,
	0xae, 0x06, 0xd4, 0x5f, 0x60, 0x4a, 0x9d, 0x45, 0x2c, 0x92, 0xcc, 0x0f, 0x0a, 0x68, 0xb3, 0xc4,
	0xc3, 0x84, 0xb4, 0x40, 0xf5, 0x3d, 0x43, 0xe9, 0x2a, 0xbd, 0xa6, 0xad, 0xfa, 0x1e, 0x39, 0x84,
	0x9a, 0x9b, 0xa0, 0x43, 0xd1, 0x33, 0xd4, 0xae, 0xd2, 0x6b, 0x0c, 0x3b, 0x7d, 0x51, 0xac, 0x9f,
	0x15, 0xeb, 0x5f, 0x64, 0xc5, 0xec, 0x2c, 0x95, 0xec, 0x82, 0xe6, 0xa4, 0x29, 0x52, 0xa3, 0xd2,
	0x55, 0x7a, 0x75, 0x5b, 0x1c, 0x88, 0x09, 0x4d, 0x37, 0xba, 0x09, 0x29, 0x26, 0x27, 0x3c, 0x58,
	0xe5, 0xc1, 0x12, 0x46, 0xf6, 0x40, 0x77, 0x16, 0x0c, 0x30, 0xb4, 0xae, 0xd2, 0xab, 0xda, 0xf2,
	0xc4, 0x2a, 0xc6, 0x89, 0xef, 0xa2, 0xa1, 0x77, 0x95, 0x9e, 0x6a, 0x8b, 0x03, 0xd9, 0x07, 0x2d,
	0xa5, 0x0e, 0x45, 0xa3, 0xd6, 0x55, 0x7a, 0xad, 0x61, 0xbd, 0x1f, 0xcf, 0xfb, 0xe7, 0x0c, 0xb0,
	0x05, 0x6e, 0x4e, 0xa0, 0x36, 0x7a, 0xee, 0x84, 0x21, 0x06, 0xb7, 0x26, 0xfb, 0x1d, 0x6a, 0x51,
	0x4c, 0xfd, 0x28, 0x4c, 0xe5, 0x64, 0x84, 0xb1, 0x65, 0xf6, 0x4c, 0x44, 0xec, 0x2c, 0xc5, 0x0c,
	0xa0, 0xf1, 0xd4, 0x4f, 0xf0, 0x09, 0xa6, 0xa9, 0x73, 0x8d, 0xe4, 0x47, 0xa8, 0xbb, 0x22, 0xf3,
	0xe1, 0x58, 0xd6, 0x5c, 0x02, 0xe4, 0x37, 0xa8, 0x47, 0x31, 0x26, 0x0e, 0xa3, 0xf2, 0xe2, 0xad,
	0xe1, 0x26, 0x2b, 0x3e, 0xcb, 0x40, 0x7b, 0x19, 0x27, 0x04, 0xaa, 0x9e, 0x43, 0x1d, 0x2e, 0x55,
	0xd3, 0xe6, 0xbf, 0xcd, 0x77, 0x0a, 0x6c, 0x8e, 0xb8, 0x96, 0x36, 0xbe, 0xba, 0xc1, 0x94, 0xde,
	0xd3, 0x30, 0xd7, 0x5b, 0x5d, 0xa7, 0x77, 0x65, 0xad, 0xde, 0xd5, 0xcf, 0xeb, 0xad, 0x15, 0xf4,
	0x36, 0x27, 0xd0, 0x78, 0x14, 0xf9, 0x61, 0x76, 0xa9, 0xbc, 0xad, 0xb2, 0xae, 0xad, 0x7a, 0xbb,
	0xad, 0xd9, 0x87, 0x56, 0x59, 0x69, 0x36, 0x20, 0xa7, 0x9f, 0x39, 0x7e, 0x22, 0xeb, 0x2d, 0x01,
	0xf3, 0x14, 0x76, 0xb9, 0x3f, 0xcf, 0x63, 0x74, 0xfd, 0x2b, 0xdf, 0xcd, 0x6e, 0x60, 0x40, 0x2d,
	0x62, 0x78, 0x2e, 0x4a, 0x76, 0x2c, 0x0b, 0xa6, 0xae, 0x08, 0x66, 0xf6, 0x60, 0x4f, 0xf6, 0x5f,
	0xad, 0xb8, 0x62, 0x13, 0xf3, 0x19, 0xb4, 0xb2, 0x4d, 0xa4, 0x71, 0x14, 0xa6, 0x48, 0xfe, 0x80,
	0xa6, 0xf4, 0x39, 0xbf, 0x12, 0xcf, 0x6d, 0x08, 0xef, 0x71, 0xc0, 0x2e, 0x85, 0x99, 0x47, 0x31,
	0x49, 0xa2, 0x44, 0xba, 0x8c, 0xe7, 0x59, 0x0c, 0xb0, 0x05, 0x6e, 0xfe, 0x03, 0xdb, 0x3c, 0x73,
	0xea, 0xa7, 0x34, 0x6f, 0xf2, 0x33, 0xe8, 0x7c, 0x92, 0xd4, 0x50, 0xba, 0x95, 0x72, 0x79, 0x19,
	0x30, 0xff, 0x87, 0x1d, 0x39, 0x43, 0x89, 0xf9, 0x0b, 0x6c, 0xc8, 0x39, 0x33, 0x6e, 0xa3, 0x60,
	0x6c, 0x3b, 0x0f, 0x9a, 0x73, 0x68, 0x8a, 0x65, 0x4a, 0xe2, 0x5f, 0xb0, 0xf9, 0x22, 0xf2, 0x43,
	0xf4, 0x64, 0xaa, 0x1c, 0xac, 0xc4, 0x2e, 0x67, 0xdc, 0x3f, 0xdb, 0x10, 0xb6, 0x26, 0x18, 0x62,
	0xc2, 0xf4, 0x95, 0x6d, 0x72, 0x8e, 0x72, 0x07, 0xe7, 0x08, 0x34, 0x7e, 0x66, 0x2f, 0xc3, 0x8d,
	0x3c, 0x94, 0x6e, 0xe0, 0xbf, 0xd9, 0xc2, 0x17, 0xe2, 0x0d, 0x4a, 0x5f, 0x65, 0x47, 0xb3, 0x06,
	0x9a, 0xb5, 0x88, 0xe9, 0xdb, 0x83, 0x9f, 0x40, 0xe3, 0xdf, 0x00, 0xb2, 0x01, 0xd5, 0xd9, 0x99,
	0x75, 0xda, 0xfe, 0x8e, 0x00, 0xe8, 0xd3, 0xd9, 0xe8, 0xb1, 0x35, 0x6e, 0x2b, 0x07, 0xff, 0x41,
	0x3d, 0x7f, 0x87, 0x2c, 0x30, 0xb2, 0xad, 0x93, 0x0b, 0x4b, 0x24, 0x8d, 0xad, 0xa9, 0x75, 0x61,
	0xb5, 0x15, 0x46, 0x65, 0x84, 0xb6, 0xca, 0xd0, 0xcb, 0x53, 0xfe, 0xbb, 0x32, 0x7c, 0xaf, 0x42,
	0x93, 0xef, 0xe0, 0x81, 0x13, 0x7a, 0x01, 0x26, 0x64, 0x00, 0xba, 0x30, 0x07, 0xd9, 0xe6, 0x2a,
	0x15, 0x9f, 0x6c, 0x87, 0x14, 0x21, 0x39, 0xfc, 0x31, 0xe8, 0x63, 0x0c, 0x90, 0x22, 0x31, 0xf2,
	0x85, 0xae, 0x38, 0xb0, 0xb3, 0xc3, 0x22, 0xab, 0xaa, 0x1d, 0x41, 0x75, 0x1a, 0xb9, 0x2f, 0xbf,
	0x96, 0x76, 0x0c, 0xfa, 0x65, 0x18, 0x7c, 0x03, 0x71, 0x00, 0x1b, 0x13, 0xa4, 0xc2, 0xc1, 0x77,
	0x53, 0x97, 0xae, 0x24, 0x7f, 0x42, 0x73, 0x82, 0xf4, 0x24, 0x08, 0xf8, 0x31, 0x25, 0x62, 0xaf,
	0x6c, 0x21, 0x9d, 0xef, 0xf3, 0xac, 0xa2, 0x51, 0x87, 0x1f, 0x95, 0xfc, 0x23, 0x90, 0xe9, 0xf9,
	0x2b, 0x54, 0x99, 0x25, 0xc9, 0x16, 0x63, 0x14, 0xbe, 0x34, 0x9d, 0xf6, 0x12, 0x90, 0x17, 0xfc,
	0x17, 0xb4, 0x29, 0x3a, 0xaf, 0x91, 0x74, 0x0a, 0xfe, 0xfc, 0x42, 0x29, 0x61, 0x82, 0x34, 0xb3,
	0xf0, 0x3a, 0x7a, 0xd1, 0xfa, 0xe4, 0x10, 0x5a, 0x62, 0x40, 0x09, 0x94, 0x46, 0xfc, 0xa1, 0x90,
	0x59, 0x1c, 0x72, 0xae, 0xf3, 0xbf, 0xc9, 0xbf, 0x3f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x7a, 0x24,
	0xb7, 0x55, 0x98, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderHandlerClient is the client API for OrderHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderHandlerClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	Delete(ctx context.Context, in *OrderSpecificRequest, opts ...grpc.CallOption) (*GenericResponse, error)
	Lock(ctx context.Context, in *OrderSpecificRequest, opts ...grpc.CallOption) (*GenericResponse, error)
	Unlock(ctx context.Context, in *OrderSpecificRequest, opts ...grpc.CallOption) (*GenericResponse, error)
	GetOrder(ctx context.Context, in *OrderSpecificRequest, opts ...grpc.CallOption) (*Order, error)
	GetAllOrders(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*OrderListResponse, error)
}

type orderHandlerClient struct {
	cc *grpc.ClientConn
}

func NewOrderHandlerClient(cc *grpc.ClientConn) OrderHandlerClient {
	return &orderHandlerClient{cc}
}

func (c *orderHandlerClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/pb.OrderHandler/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderHandlerClient) Delete(ctx context.Context, in *OrderSpecificRequest, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/pb.OrderHandler/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderHandlerClient) Lock(ctx context.Context, in *OrderSpecificRequest, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/pb.OrderHandler/Lock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderHandlerClient) Unlock(ctx context.Context, in *OrderSpecificRequest, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/pb.OrderHandler/Unlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderHandlerClient) GetOrder(ctx context.Context, in *OrderSpecificRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/pb.OrderHandler/GetOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderHandlerClient) GetAllOrders(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*OrderListResponse, error) {
	out := new(OrderListResponse)
	err := c.cc.Invoke(ctx, "/pb.OrderHandler/GetAllOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderHandlerServer is the server API for OrderHandler service.
type OrderHandlerServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	Delete(context.Context, *OrderSpecificRequest) (*GenericResponse, error)
	Lock(context.Context, *OrderSpecificRequest) (*GenericResponse, error)
	Unlock(context.Context, *OrderSpecificRequest) (*GenericResponse, error)
	GetOrder(context.Context, *OrderSpecificRequest) (*Order, error)
	GetAllOrders(context.Context, *Empty) (*OrderListResponse, error)
}

// UnimplementedOrderHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedOrderHandlerServer struct {
}

func (*UnimplementedOrderHandlerServer) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedOrderHandlerServer) Delete(ctx context.Context, req *OrderSpecificRequest) (*GenericResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedOrderHandlerServer) Lock(ctx context.Context, req *OrderSpecificRequest) (*GenericResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lock not implemented")
}
func (*UnimplementedOrderHandlerServer) Unlock(ctx context.Context, req *OrderSpecificRequest) (*GenericResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unlock not implemented")
}
func (*UnimplementedOrderHandlerServer) GetOrder(ctx context.Context, req *OrderSpecificRequest) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrder not implemented")
}
func (*UnimplementedOrderHandlerServer) GetAllOrders(ctx context.Context, req *Empty) (*OrderListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllOrders not implemented")
}

func RegisterOrderHandlerServer(s *grpc.Server, srv OrderHandlerServer) {
	s.RegisterService(&_OrderHandler_serviceDesc, srv)
}

func _OrderHandler_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderHandlerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrderHandler/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderHandlerServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderHandler_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderSpecificRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderHandlerServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrderHandler/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderHandlerServer).Delete(ctx, req.(*OrderSpecificRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderHandler_Lock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderSpecificRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderHandlerServer).Lock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrderHandler/Lock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderHandlerServer).Lock(ctx, req.(*OrderSpecificRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderHandler_Unlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderSpecificRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderHandlerServer).Unlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrderHandler/Unlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderHandlerServer).Unlock(ctx, req.(*OrderSpecificRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderHandler_GetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderSpecificRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderHandlerServer).GetOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrderHandler/GetOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderHandlerServer).GetOrder(ctx, req.(*OrderSpecificRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderHandler_GetAllOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderHandlerServer).GetAllOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrderHandler/GetAllOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderHandlerServer).GetAllOrders(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.OrderHandler",
	HandlerType: (*OrderHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _OrderHandler_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OrderHandler_Delete_Handler,
		},
		{
			MethodName: "Lock",
			Handler:    _OrderHandler_Lock_Handler,
		},
		{
			MethodName: "Unlock",
			Handler:    _OrderHandler_Unlock_Handler,
		},
		{
			MethodName: "GetOrder",
			Handler:    _OrderHandler_GetOrder_Handler,
		},
		{
			MethodName: "GetAllOrders",
			Handler:    _OrderHandler_GetAllOrders_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/sprawl.proto",
}

// ChannelHandlerClient is the client API for ChannelHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChannelHandlerClient interface {
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error)
	Leave(ctx context.Context, in *ChannelSpecificRequest, opts ...grpc.CallOption) (*GenericResponse, error)
	GetChannel(ctx context.Context, in *ChannelSpecificRequest, opts ...grpc.CallOption) (*Channel, error)
	GetAllChannels(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ChannelListResponse, error)
}

type channelHandlerClient struct {
	cc *grpc.ClientConn
}

func NewChannelHandlerClient(cc *grpc.ClientConn) ChannelHandlerClient {
	return &channelHandlerClient{cc}
}

func (c *channelHandlerClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error) {
	out := new(JoinResponse)
	err := c.cc.Invoke(ctx, "/pb.ChannelHandler/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelHandlerClient) Leave(ctx context.Context, in *ChannelSpecificRequest, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/pb.ChannelHandler/Leave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelHandlerClient) GetChannel(ctx context.Context, in *ChannelSpecificRequest, opts ...grpc.CallOption) (*Channel, error) {
	out := new(Channel)
	err := c.cc.Invoke(ctx, "/pb.ChannelHandler/GetChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelHandlerClient) GetAllChannels(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ChannelListResponse, error) {
	out := new(ChannelListResponse)
	err := c.cc.Invoke(ctx, "/pb.ChannelHandler/GetAllChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChannelHandlerServer is the server API for ChannelHandler service.
type ChannelHandlerServer interface {
	Join(context.Context, *JoinRequest) (*JoinResponse, error)
	Leave(context.Context, *ChannelSpecificRequest) (*GenericResponse, error)
	GetChannel(context.Context, *ChannelSpecificRequest) (*Channel, error)
	GetAllChannels(context.Context, *Empty) (*ChannelListResponse, error)
}

// UnimplementedChannelHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedChannelHandlerServer struct {
}

func (*UnimplementedChannelHandlerServer) Join(ctx context.Context, req *JoinRequest) (*JoinResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Join not implemented")
}
func (*UnimplementedChannelHandlerServer) Leave(ctx context.Context, req *ChannelSpecificRequest) (*GenericResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Leave not implemented")
}
func (*UnimplementedChannelHandlerServer) GetChannel(ctx context.Context, req *ChannelSpecificRequest) (*Channel, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannel not implemented")
}
func (*UnimplementedChannelHandlerServer) GetAllChannels(ctx context.Context, req *Empty) (*ChannelListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllChannels not implemented")
}

func RegisterChannelHandlerServer(s *grpc.Server, srv ChannelHandlerServer) {
	s.RegisterService(&_ChannelHandler_serviceDesc, srv)
}

func _ChannelHandler_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelHandlerServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChannelHandler/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelHandlerServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChannelHandler_Leave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelSpecificRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelHandlerServer).Leave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChannelHandler/Leave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelHandlerServer).Leave(ctx, req.(*ChannelSpecificRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChannelHandler_GetChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelSpecificRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelHandlerServer).GetChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChannelHandler/GetChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelHandlerServer).GetChannel(ctx, req.(*ChannelSpecificRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChannelHandler_GetAllChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelHandlerServer).GetAllChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChannelHandler/GetAllChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelHandlerServer).GetAllChannels(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChannelHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ChannelHandler",
	HandlerType: (*ChannelHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _ChannelHandler_Join_Handler,
		},
		{
			MethodName: "Leave",
			Handler:    _ChannelHandler_Leave_Handler,
		},
		{
			MethodName: "GetChannel",
			Handler:    _ChannelHandler_GetChannel_Handler,
		},
		{
			MethodName: "GetAllChannels",
			Handler:    _ChannelHandler_GetAllChannels_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/sprawl.proto",
}
